import numpy as np

def lu_decomposition_manual(A):
    n = len(A)
    L = [[0]*n for _ in range(n)]
    U = [[0]*n for _ in range(n)]

    for i in range(n):
        # Upper Triangular
        for k in range(i, n):
            U[i][k] = A[i][k] - sum(L[i][j] * U[j][k] for j in range(i))

        # Lower Triangular
        L[i][i] = 1
        for k in range(i+1, n):
            L[k][i] = (A[k][i] - sum(L[k][j] * U[j][i] for j in range(i))) / U[i][i]

    print("Matrix A:")
    for row in A:
        print(row)
    print("\nLower Triangular Matrix L:")
    for row in L:
        print(row)
    print("\nUpper Triangular Matrix U:")
    for row in U:
        print(row)

# Example matrix
A = [[2, -1, -2],
     [-4, 6, 3],
     [-4, -2, 8]]

lu_decomposition_manual(A)
